import 'dart:async';
import 'dart:io';

import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_database/firebase_database.dart';
import 'package:firebase_database/ui/firebase_animated_list.dart';

import './screens/itemlisting.dart' as itemListing;

// itemlisting.dart -> add an item for listing
// What do we need for an item listing:
//  1. Name of item
//  2. Quantity
//  3. Location of pick-up
//  4. Category of item (Drop-down list)
//  5. Photo(s) of item
//Future<Null> addItem(String user, String itemName, int qty, String location, String category) async {
//  DatabaseReference _addItemRef;
//  _addItemRef = FirebaseDatabase.instance.reference().child('items/${user}');
//
//}


// Add items with unique id generated by Firebase
Future<Null> addUniqueItem(String user) async {
  DatabaseReference _dbRef;

  _dbRef = FirebaseDatabase.instance.reference().child("itemsListing/${user}");

  _dbRef.push().set({
    "Item Name" : "IPad Pro 10",
    "Qty" : 2,
    "Location" : "Jurong West",
    "Category" : "Electronics",
    "Status" : "Not Available",
  });
}



// Retrieve item based on Key-Value pair
Future<String> readItems(String user) async {
//  String result = (await FirebaseDatabase.instance.reference().child("itemsListing/${user}/Item1/Item Name").once()).value;
//  return result;
  DatabaseReference _dbRef;
  _dbRef = FirebaseDatabase.instance.reference().child("itemsListing/${user}");

  dynamic retrievedItems;
  retrievedItems = _dbRef.orderByChild("Item Name").once();
  print(retrievedItems);
}


// UNUSED: Consider Deleting
//Future<Null> addData(String user) async {
//  DatabaseReference _messageRef;
//  _messageRef = FirebaseDatabase.instance.reference().child('messages/${user}');
//
//  for(int i = 0; i < 5; i++) {
//    _messageRef.update(<String, String>{'Key${i.toString()}' : 'Body ${i.toString()}'});
//  }
//}

Future<Null> removeData(String user) async {
  DatabaseReference _messageRef;
  _messageRef = FirebaseDatabase.instance.reference().child('messages/${user}');
  await _messageRef.remove();
}

Future<Null> setData(String user, String key, String value) async {
  DatabaseReference _messageRef;
  _messageRef = FirebaseDatabase.instance.reference().child('messages/${user}');
  _messageRef.set(<String, String>{key : value});
}

Future<Null> updateData(String user, String key, String value) async {
  DatabaseReference _messageRef;
  _messageRef = FirebaseDatabase.instance.reference().child('messages/${user}');
  _messageRef.update(<String, String>{key : value});
}